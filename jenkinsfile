pipeline {
  agent any

      environment 
    {
        AWS_ACCOUNT_ID = '3501-0060-2815'
        AWS_DEFAULT_REGION = 'eu-west-2'
        IMAGE_REPO_NAME = 'php-todo'
        IMAGE_TAG = 'latest'
        REPOSITORY_URI = '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}'
    }

  stages {

    stage("Initial cleanup") {
        steps {
        dir("${WORKSPACE}") {
            deleteDir()
        }
        }
    }

    stage('Logging into AWS ECR'){
      steps {
        script {
            sh "aws ecr get-login-password — region ${AWS_DEFAULT_REGION} | docker login — username AWS — password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
        }
      }
    }
    
    stage('Checkout SCM'){
      steps {
        script {checkout scmGit(branches: [[name: '*/jenkins-ecr']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/earchibong/php-todo.git']])}
      }
    }

    stage('Build Image') {
        steps {
            script {
                dockerImage = docker.build '${IMAGE_REPO_NAME}:${IMAGE_TAG}'
            }
        }
    }

    stage('Deploy Image') {
        steps {
            script {
                sh 'docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG'
                sh 'docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}'
            }
        }
    }

    stage('Remove Unused Image') {
        steps {
            sh 'docker rmi ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}'
        }
    }

   }
}

